name: 'lvh-run'
description: 'Runs LVH VMs for Cilium CI testing'
inputs:
  image:
    description: 'LVH image name ("base", "kind", etc)'
    required: true
    default: 'kind'
  cmd:
    description: 'Commands to run in a VM'
    required: true
runs:
  using: "composite"
  steps:
    - name: Find lvh cli
      id: find-lvh-cli
      shell: bash
      run: |
        if [ -f "/bin/lvh" ]; then
          echo '::set-output name=skip::true'
        fi
    - name: Fetch lvh cli
      if: steps.find-lvh-cli.outputs.skip != 'true'
      uses: shrink/actions-docker-extract@v1
      id: fetch-lvh-cli
      with:
        image: 'quay.io/lvh-images/lvh:latest'
        path: '/usr/bin/lvh'
    - name: Install lvh cli
      if: steps.find-lvh-cli.outputs.skip != 'true'
      shell: bash
      run: mv ${{ steps.fetch-lvh-cli.outputs.destination }}/lvh /bin/lvh

    - uses: actions/cache@v3
      id: cache-lvh-image
      with:
        path: /_images/${{ inputs.image}}.qcow2
        key: lvh-image-${{ inputs.image }}
    - name: Fetch VM image
      if: steps.cache-lvh-image.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir /_images
        docker run -v /_images:/mnt/images quay.io/lvh-images/root-images:latest cp /data/images/${{ inputs.image }}.qcow2.zst /mnt/images
        cd /_images
        zstd -d ${{ inputs.image }}.qcow2.zst && rm -f ${{ inputs.image}}.qcow2.zst
        cd -

    - name: Start VM
      shell: bash
      run: |
        /bin/lvh run --host-mount=$(pwd) --image /_images/${{ inputs.image }}.qcow2 --daemonize -p 2222:22
    - name: Run CMDs
      shell: bash
      run: |
         ssh -p 2222 -o "StrictHostKeyChecking=no" root@localhost << EOF
         ${{ inputs.cmd }}
         EOF
